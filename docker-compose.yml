version: '3.8'

services:
  backend:
    build: 
      context: ./be
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - MQTT_BROKER=haproxy
      - MQTT_PORT=1883
      - RASA_URL=http://rasa:5005
    volumes:
      - ./be:/app
    depends_on:
      - mongodb
      # - mqtt
    networks:
      - iot-network

  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile
    ports:
      - "443:443"
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://34.126.118.248:8000
      - REACT_APP_WS_URL=ws://34.126.118.248:8765
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./fe:/app
      - /app/node_modules
      - ./fe/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./fe/certs/selfsigned.crt:/etc/nginx/ssl/selfsigned.crt:ro
      - ./fe/certs/selfsigned.key:/etc/nginx/ssl/selfsigned.key:ro
    depends_on:
      - backend
      - processor
    networks:
      - iot-network

  # rasa:
  #   build:
  #     context: ./rasa
  #     dockerfile: Dockerfile
  #   image: khangfu/rasa:latest
  #   ports:
  #     - "5005:5005"
  #   volumes:
  #     - rasa_models:/app/models
  #     - rasa_pip_cache:/root/.cache/pip
  #     - ./rasa:/app
  #     - ./rasa/models:/app/models
  #   command: run --enable-api --cors "*" --endpoints /app/endpoints.yml
  #   networks:
  #     - iot-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - iot-network
  haproxy:
    image: haproxy:latest
    container_name: haproxy
    ports:
      - "1883:1883"    # expose MQTT port ra bên ngoài
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - emqx1
      - emqx2
      - emqx3
    networks:
      - iot-network

  emqx1:
    image: emqx/emqx:latest
    container_name: emqx1
    hostname: emqx1
    environment:
      - EMQX_NAME=emqx1
      - EMQX_CLUSTER__DISCOVERY=static
      - EMQX_CLUSTER__STATIC__SEEDS=emqx1@emqx1,emqx2@emqx2,emqx3@emqx3
    networks:
      - iot-network

  emqx2:
    image: emqx/emqx:latest
    container_name: emqx2
    hostname: emqx2
    environment:
      - EMQX_NAME=emqx2
      - EMQX_CLUSTER__DISCOVERY=static
      - EMQX_CLUSTER__STATIC__SEEDS=emqx1@emqx1,emqx2@emqx2,emqx3@emqx3
    networks:
      - iot-network

  emqx3:
    image: emqx/emqx:latest
    container_name: emqx3
    hostname: emqx3
    environment:
      - EMQX_NAME=emqx3
      - EMQX_CLUSTER__DISCOVERY=static
      - EMQX_CLUSTER__STATIC__SEEDS=emqx1@emqx1,emqx2@emqx2,emqx3@emqx3
    networks:
      - iot-network
  # mqtt:
  #   image: eclipse-mosquitto:latest
  #   ports:
  #     - "1883:1883"
  #     - "9001:9001"
  #   volumes:
  #     - ./be/mosquitto/config:/mosquitto/config
  #     - ./be/mosquitto/data:/mosquitto/data
  #     - ./be/mosquitto/log:/mosquitto/log
  #   networks:
  #     - iot-network
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    # volumes:
    #   - redis_data:/data
  # action-server:
  #   build: ./rasa
  #   image: khangfu/action-server:latest
  #   ports:
  #     - "5055:5055"
  #   volumes:
  #     - ./rasa:/app
  #   command: run actions
  #   networks:
  #     - iot-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - iot-network

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - iot-network

  gateway:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    environment:
      - KAFKA_SERVER=kafka:29092
      - MQTT_BROKER=haproxy
      - MQTT_PORT=1883
    depends_on:
      - kafka
      # - mqtt
    restart: always
    networks:
      - iot-network

  processor:
    build:
      context: ./sensor_processor
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - KAFKA_SERVER=kafka:29092
      - GROUP_ID=processor-group-1
    depends_on:
      - kafka
    restart: always
    networks:
      - iot-network

networks:
  iot-network:
    driver: bridge

volumes:
  mongodb_data:
  rasa_pip_cache:
  rasa_models:
